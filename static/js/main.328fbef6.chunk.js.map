{"version":3,"sources":["components/Colors.js","App.js","reportWebVitals.js","index.js"],"names":["Colors","useState","color","setColor","randomBgColor","x","Math","floor","random","y","z","bgColor","console","log","className","style","background","type","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA6BeA,EA3BA,WAAO,IAAD,EAESC,mBAAS,sBAFlB,mBAEVC,EAFU,KAEHC,EAFG,KAIbC,EAAgB,WAChB,IAAIC,EAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,EAAIH,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBG,EAAO,cAAUN,EAAV,aAAgBI,EAAhB,aAAsBC,EAAtB,KACXE,QAAQC,IAAIF,GACZR,EAASQ,IAIb,OACI,sBAAKG,UAAU,YAAYC,MAAO,CAAEC,WAAYd,GAAhD,UAEI,6BAAKE,IACL,wBAAQa,KAAK,SAASC,QAASd,EAA/B,uBAEA,qBAAKU,UAAU,QAAf,SACI,6BAAKZ,U,MCZNiB,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.328fbef6.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Colors = () => {\n\n    const [color, setColor] = useState(\"rgb(123, 123, 123)\")\n\n    let randomBgColor = () => {\n        let x = Math.floor(Math.random() * 256)\n        let y = Math.floor(Math.random() * 256)\n        let z = Math.floor(Math.random() * 256)\n        let bgColor = `rgb(${x}, ${y}, ${z})`\n        console.log(bgColor)\n        setColor(bgColor)\n    }\n\n\n    return (\n        <div className=\"container\" style={{ background: color }} >\n\n            <h3>{randomBgColor}</h3>\n            <button type=\"button\" onClick={randomBgColor}>Click Me!</button>\n\n            <div className=\"color\">\n                <h3>{color}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default Colors\n","import Colors from './components/Colors'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Colors />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}